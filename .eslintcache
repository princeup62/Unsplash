[{"C:\\react\\gallery\\src\\index.js":"1","C:\\react\\gallery\\src\\App.js":"2","C:\\react\\gallery\\src\\reportWebVitals.js":"3","C:\\react\\gallery\\src\\components\\Images.js":"4","C:\\react\\gallery\\src\\components\\Image.js":"5","C:\\react\\gallery\\src\\components\\utils\\hooks\\useScroll.js":"6","C:\\react\\gallery\\src\\components\\utils\\hooks\\useFetchImage.js":"7"},{"size":221,"mtime":1609860589836,"results":"8","hashOfConfig":"9"},{"size":212,"mtime":1611583446547,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2152,"mtime":1612104432284,"results":"12","hashOfConfig":"9"},{"size":589,"mtime":1611667179994,"results":"13","hashOfConfig":"9"},{"size":511,"mtime":1612074471004,"results":"14","hashOfConfig":"9"},{"size":725,"mtime":1612103035216,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1dkuxat",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\react\\gallery\\src\\index.js",[],["34","35"],"C:\\react\\gallery\\src\\App.js",[],"C:\\react\\gallery\\src\\reportWebVitals.js",[],"C:\\react\\gallery\\src\\components\\Images.js",["36","37","38"],"\r\nimport axios from 'axios';\r\nimport React,{useEffect, useState,useRef} from 'react'\r\nimport Image from './Image';\r\nimport useFetchImage from './utils/hooks/useFetchImage';\r\nimport useScroll from './utils/hooks/useScroll';\r\nimport Spinner from '../assets/spinner.gif';\r\n\r\n function Images() {\r\n\r\n\r\n  console.log(process.env.REACT_APP_UNSPLASH_KEY);\r\n  // const [ImgSrc,setImageSrc]=useState([]);\r\n\r\n \r\n\r\n  const [inputData,setInputData]=useState(\"\");\r\n\r\n  const [page, setPage] = useState(201);\r\n\r\n  const [ImgSrc,setImageSrc,isLoading] =useFetchImage(page);\r\n\r\n  const scrollPosition = useScroll();\r\n\r\n  useEffect (()=>{\r\n \r\n// const inputBox =document.getElementById('inputbox');\r\n// inputBox.focus();\r\nconsole.log(inputRef);\r\n\r\ninputRef.current.focus();\r\n// axios.get(`${process.env.REACT_APP_UNSPLASH_URL}/?client_id=${process.env.REACT_APP_UNSPLASH_KEY}&page=1`)\r\n// .then((res)=>setImageSrc(res.data))\r\n  },[]);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n\r\n  function handleInputChange (e)\r\n  {\r\n    setInputData(e.target.value);\r\n  }\r\n\r\n  function handleSubmit()\r\n  {\r\n    if(inputData.trim()!==\"\")\r\n    {\r\n      setImageSrc([inputData,...ImgSrc]);\r\n      setInputData(\"\");\r\n    }\r\n  \r\n  }\r\n\r\n  function handleDelete(index)\r\n  {\r\n     let virtualArray= ImgSrc.filter((element,mic)=>mic!==index);\r\n    setImageSrc([...virtualArray]);\r\n  }\r\n\r\n  return (\r\n\r\n\r\n\r\n  <>\r\n\r\n  {\r\n    isLoading?<div className=\"loading-outer-wrapper\"><img src={Spinner}/></div>\r\n    :\r\n    <><section className=\"input-section-wrapper\">\r\n    \r\n    \r\n    <input type=\"text\"\r\n    ref={inputRef}\r\n    placeholder=\"enter the URL of the images\"\r\n    value={inputData}\r\n    onChange={handleInputChange}/>\r\n   <button onClick={handleSubmit}>Submit</button>\r\n   </section>\r\n   <div className=\"all-content-cover\">  \r\n\r\n      <section className=\"Image-map-wrapper\">\r\n      {ImgSrc.map((data,index)=> <Image imageSource={data.urls.regular} \r\n      handleDelete={handleDelete} key={index} id={index} index={index} />)}\r\n      </section>\r\n    \r\n    </div>\r\n    <button onClick={()=>setPage(page+1)}>Load more...</button>\r\n    </>\r\n  }\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Images;\r\n","C:\\react\\gallery\\src\\components\\Image.js",[],"C:\\react\\gallery\\src\\components\\utils\\hooks\\useScroll.js",[],["39","40"],"C:\\react\\gallery\\src\\components\\utils\\hooks\\useFetchImage.js",["41","42"],"import axios from 'axios'\r\nimport React, { useState,useEffect } from 'react'\r\n\r\nexport default function useFetchImage(page) {\r\n\r\n\r\n    const URL = process.env.REACT_APP_UNSPLASH_URL;\r\n\r\n    const secret = process.env.REACT_APP_UNSPLASH_KEY;\r\n\r\n    const [ImgSrc,setImageSrc]=useState([]);\r\n    const [isloading, setIsLoading] = useState(false)\r\n\r\n\r\n   useEffect(() => {\r\n\r\n    setIsLoading(true) \r\n    axios.get(`${URL}/?client_id=${secret}&page=${page}`)\r\n    .then((res)=>{\r\n        setImageSrc([...ImgSrc,...res.data]);\r\n        setIsLoading(false)\r\n    }).catch(e=>{console.log(`------------------error----------${e}`);\r\n    setIsLoading(false)\r\n})\r\n    \r\n   }, [page])\r\n\r\n    return [ImgSrc,setImageSrc,isloading]; \r\n}\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":13},{"ruleId":"47","severity":1,"message":"51","line":23,"column":9,"nodeType":"49","messageId":"50","endLine":23,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":67,"column":54,"nodeType":"54","endLine":67,"endColumn":74},{"ruleId":"43","replacedBy":"55"},{"ruleId":"45","replacedBy":"56"},{"ruleId":"47","severity":1,"message":"57","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":26,"column":7,"nodeType":"60","endLine":26,"endColumn":13,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'scrollPosition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ImgSrc', 'URL', and 'secret'. Either include them or remove the dependency array. You can also do a functional update 'setImageSrc(I => ...)' if you only need 'ImgSrc' in the 'setImageSrc' call.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [ImgSrc, URL, page, secret]",{"range":"67","text":"68"},[666,672],"[ImgSrc, URL, page, secret]"]